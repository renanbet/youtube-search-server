#!/usr/bin/env node
/*
 * Arquivo que inicializa o server
 */
var app = require('../app')
var debug = require('debug')('teste:server')
var http = require('http')
var db = require('../config/db')
var server = {}

new Promise(async (resolve, reject) => {
  /*
   * Conecta no banco antes de subir a aplicação
   */
  let connected = await db.connection()
  if (!connected) {
    console.log('db connection error')
    process.exit(1)
  }
  resolve(startServer())
})

const startServer = () => {
  var port = process.env.PORT || '3000'
  app.set('port', port)
  server = http.createServer(app)
  server.listen(port)
  server.on('error', onError)
  server.on('listening', onListening)
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  var addr = server.address()
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  console.log('Listening on ' + bind)
}
